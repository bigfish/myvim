# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned

# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
#if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    #. /etc/bash_completion
#fi

############################################# PERSONAL #########################################
#[[ -s /Users/dwilhelm/.autojump/etc/profile.d/autojump.sh ]] && source /Users/dwilhelm/.autojump/etc/profile.d/autojump.sh

eval "$(fasd --init auto)"

################## ALIASES ###########################
alias ga='git add'
alias gp='git push'
alias gps='git push'
alias gl='git log'
alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias gc='git commit'
alias gcm='git commit -m'
alias gca='git commit -a'
alias gcam='git commit -am'
alias gb='git branch'
alias gco='git checkout'
alias gpl='git pull'
alias gpr='git pull --rebase'
alias gcl='git clone'
alias grs='git reset --hard HEAD'
alias ks='ls -lhFGv'
alias cls=clear
alias ff="firefox &>/dev/null &"
export NODE_PATH=/usr/local/lib/node_modules
export EDITOR=vim
export PAGER=less
#enable 256 colors in vim
[ -z "$TMUX" ] && export TERM=xterm-256color

#prevent flow control
stty -ixon
stty stop ''
stty start ''
#RVM (ruby version manager)
#source ~/.rvm/scripts/rvm
#tmuxinator
#[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

alias vi="/usr/bin/vim"
alias chat="weechat-curses irc://exinda-mvnrepo.wat.exinda.com"
alias apti="sudo apt-get install"
alias repache='sudo apache2ctl restart'
alias rebash=". ~/.bashrc"
alias psa="ps aux | grep"
alias dev="bundle exec guard"
alias msyql="mysql"
alias phpi="sudo vim /etc/php5/apache2/php.ini"
alias alog="tail -f /var/log/apache2/error.log"
alias hosts="sudo vim /etc/hosts"
alias wd="webpack-dev-server"
alias dc="docker-compose"
alias di="docker images"
alias canary="/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary --ignore-certificate-errors >&/dev/null &"
alias kc="kubectl"
alias mini="minikube"
alias ksc="kubectl get -n security-portal services"
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
#LESS COLORS
export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
#CONFIGURE PATH
export PATH=$HOME/bin:$PATH
export LESS=' -R '
export NPM_TOKEN="Y7scLoHKtOXhnDI0EeO5vSFEbIyM+96gs6t/lof0WjE="

if [ `hostname` = es-mbp-dedavidw.local ];then
        . ~/.esentire_rc.sh
fi

#parse_git_branch() {
    #git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
#}

#export PS1="\\[$(tput setaf 7)\\]\[\e[0;33m\]\\w\[\e[0;33m\]\[\e[m\]\[\e[0;32m\]\$(parse_git_branch)\[\e[0;32m\]\[\e[m\]\[\e[1;32m\] >: \[\e[1;32m\]\\[$(tput sgr0)\\]"
export PS1="\\[$(tput setaf 7)\\]\[\e[0;33m\]\\w\[\e[0;33m\]\[\e[m\]\[\e[0;32m\]\$()\[\e[0;32m\]\[\e[m\]\[\e[1;32m\] >: \[\e[1;32m\]\\[$(tput sgr0)\\]"
. /Users/dwilhelm/bin/git-prompt/git-prompt

export PROMPT_COMMAND=git_prompt

set t_Co=256

[ -d "/usr/local/opt/python@2/bin" ] && export PATH="/usr/local/opt/python@2/bin:$PATH"
#. ~/nvm/nvm.sh

#if [ -f $(brew --prefix)/etc/bash_completion ]; then
    #. $(brew --prefix)/etc/bash_completion
#fi

# this slows down startup by seconds!
#if [ -f $(brew --prefix nvm)/nvm.sh ];then
    #source $(brew --prefix nvm)/nvm.sh
#fi

#nvm use --delete-prefix v6.9.1 > /dev/null

export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced
set -o emacs

export PATH=$PATH:$HOME/testcases/bin
export NODE_ENV=development

export NEOVIM_JS_DEBUG=$HOME/.nvjslog
export PATH=$PATH:/Users/dwilhelm/Library/Python/2.7/lib/python/site-packages/django/bin
export ALERTING_GUI=$HOME/dev/soc-alerting-gui/src/AlertingGUI
alias dm=docker-machine
export HOMEBREW_GITHUB_API_TOKEN=1defaa675aa87ea7d7e6c1033eb82fbc011ea17d

find_npm_module() {
  module=$1
  grep -r --exclude-dir=node_modules "\"$module\":" .
}

update_npm_module () {
  module=$1
  version=$2
  echo updating $module to version $version
  grep -r -l --exclude-dir=node_modules "$module" . | xargs sed -i -e 's/"'"$module"'": ".*"/"'"$module"'": "'"$version"'"/'
}

go()
{
if [ -f "$1" ]
then
    $EDITOR "$1"
else
    cd "$1" && ls
fi
}
